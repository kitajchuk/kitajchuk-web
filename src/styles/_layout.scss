@use "./vars.scss";
@use "./type.scss";

body {
  font-family: "panicsans", monospace;
  font-size: vars.$font-base;
  line-height: 2;
  background-color: vars.$white;

  &.is-dark-mode {
    color: vars.$white;
    background-color: vars.$black;
  }
}

p,
h1 {
  a {
    border-bottom: 1px solid currentcolor;
  }
}

.header {
  padding: 32px vars.$wrap-padding 0;
  position: relative;
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: center;

  a {
    line-height: 1;
  }

  svg {
    height: 48px;
    width: auto;

    path {
      .is-dark-mode & {
        fill: vars.$white;
      }
    }
  }
}

.sep {
  display: inline;

  &:before {
    content: " | ";
  }
}

._404 {
  p,
  h1 {
    display: inline;
  }
}

.navi {
  padding: 96px vars.$wrap-padding 64px;
  text-align: center;

  &__list {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    grid-gap: 16px;
  }

  &__item {
    &.active {
      text-decoration: line-through;
    }
  }

  @media (max-width: vars.$width-mobile) {
    padding-top: 48px;
    padding-bottom: 32px;
    padding-left: 16px;
    padding-right: 16px;
  }
}

.footer {
  flex-direction: column;
}

.hero {
  display: flex;
  align-items: center;
  justify-content: center;
}

.sec {
  text-align: center;
  padding: 32px;
}

.uwrap {
  padding: 0 32px 64px;
}

.colf {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  text-align: center;

  p + p {
    margin-top: 16px;
  }
}

.image {
  position: relative;
  width: 100%;

  &--landscape {
    max-width: vars.$width-max;
  }

  &--portrait {
    max-width: vars.$width-tablet-2;
  }

  &--hero {
    max-width: vars.$width-small;
  }

  &__fit {
    position: relative;
    width: 100%;
  }

  &__img {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.anim {
  opacity: 0;
  transform: translate3d(0, 32px, 0);
  transition:
    opacity vars.$anim-duration vars.$anim-ease,
    transform vars.$anim-duration vars.$anim-ease;

  &.is-animated {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
